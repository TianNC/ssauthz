//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Net;
using Common.Services;
using Services.AuthZ.Workflow;
using Services.MessageContracts;

namespace Services.AuthZ.Services
{
    /// <summary>
    /// Provides the service endpoint for exposing the 'UserAccounts' resource.
    /// </summary>
    internal partial class UserAccounts : ServiceBase, IUserAccounts
    {
        /// <summary>
        /// Gets or set the <see cref="IUserAccountsManager"/>
        /// </summary>
        public IUserAccountsManager UserAccountsManager { get; set; }

        /// <summary>
        /// Provides the Get request for the 'UserAccounts' resource.
        /// </summary>
        public GetUserAccountResponse Get(GetUserAccount body)
        {
            return ProcessRequest(body, HttpStatusCode.OK, () =>
            {
                var response = this.UserAccountsManager.GetUserAccount(this.Request, body);

                return response;
            });
        }

        /// <summary>
        /// Provides the List request for the 'UserAccounts' resource.
        /// </summary>
        public ListUserAccountsResponse Get(ListUserAccounts body)
        {
            return ProcessRequest(body, HttpStatusCode.OK, () =>
            {
                var response = this.UserAccountsManager.ListUserAccounts(this.Request, body);

                return response;
            });
        }

        /// <summary>
        /// Provides the Create request for the 'UserAccounts' resource.
        /// </summary>
        public CreateUserAccountResponse Post(CreateUserAccount body)
        {
            return ProcessRequest(body, HttpStatusCode.Created, () =>
            {
                var response = this.UserAccountsManager.CreateUserAccount(this.Request, body);
                this.SetLocationHeader(GetCreateUserAccountResponseId(response));

                return response;
            });
        }

        /// <summary>
        /// Provides the Update request for the 'UserAccounts' resource.
        /// </summary>
        public UpdateUserAccountResponse Put(UpdateUserAccount body)
        {
            return ProcessRequest(body, HttpStatusCode.Accepted, () =>
            {
                var response = this.UserAccountsManager.UpdateUserAccount(this.Request, body);

                return response;
            });
        }

        /// <summary>
        /// Provides the Delete request for the 'UserAccounts' resource.
        /// </summary>
        public DeleteUserAccountResponse Delete(DeleteUserAccount body)
        {
            return ProcessRequest(body, HttpStatusCode.Accepted, () =>
            {
                var response = this.UserAccountsManager.DeleteUserAccount(this.Request, body);

                return response;
            });
        }

    }
}