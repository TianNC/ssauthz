//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Net;
using Common.Services;
using Services.AuthZ.Workflow;
using Services.MessageContracts;

namespace Services.AuthZ.Services
{
    /// <summary>
    /// Provides the service endpoint for exposing the 'ClientApplications' resource.
    /// </summary>
    internal partial class ClientApplications : ServiceBase, IClientApplications
    {
        /// <summary>
        /// Gets or set the <see cref="IClientApplicationsManager"/>
        /// </summary>
        public IClientApplicationsManager ClientApplicationsManager { get; set; }

        /// <summary>
        /// Provides the Get request for the 'ClientApplications' resource.
        /// </summary>
        public GetClientApplicationResponse Get(GetClientApplication body)
        {
            return ProcessRequest(body, HttpStatusCode.OK, () =>
            {
                var response = this.ClientApplicationsManager.GetClientApplication(this.Request, body);

                return response;
            });
        }

        /// <summary>
        /// Provides the Create request for the 'ClientApplications' resource.
        /// </summary>
        public CreateClientApplicationResponse Post(CreateClientApplication body)
        {
            return ProcessRequest(body, HttpStatusCode.Created, () =>
            {
                var response = this.ClientApplicationsManager.CreateClientApplication(this.Request, body);
                this.SetLocationHeader(GetCreateClientApplicationResponseId(response));

                return response;
            });
        }

        /// <summary>
        /// Provides the Delete request for the 'ClientApplications' resource.
        /// </summary>
        public DeleteClientApplicationResponse Delete(DeleteClientApplication body)
        {
            return ProcessRequest(body, HttpStatusCode.Accepted, () =>
            {
                var response = this.ClientApplicationsManager.DeleteClientApplication(this.Request, body);

                return response;
            });
        }

    }
}